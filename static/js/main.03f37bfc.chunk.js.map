{"version":3,"sources":["utils/TimeFormHelpers.js","utils/TimeUtil.js","common/themeConstants.js","common/styles/useTextInputStyles.js","components/Input/DistanceInput.js","components/Input/TimeInput.js","common/styles/getClass.js","common/styles/useCalculatedTextStyles.js","components/CalculatedResults.js","components/Input/InputWrapper.js","components/Input/TabContentWrapper.js","components/Pace.js","components/Time.js","components/Distance.js","assets/racepace.png","App.js","reportWebVitals.js","index.js"],"names":["TimeFormHelpers","time","hoursRegexTime","test","mashedString","match","substring","length","seconds","minutes","minutesRegexTime","enteredCharacter","TimeUtil","getTimeInSeconds","hours","Number","secondsToTimeString","secondsToHoursString","secondsToMinutesString","s","Math","trunc","round","primaryColor","useTextInputStyles","makeStyles","textInput","backgroundColor","borderRadius","margin","color","borderColor","DistanceInput","props","isMobile","useMediaQuery","value","setValue","metric","autoFocus","classes","TextField","className","variant","placeholder","onChange","e","target","label","style","marginBottom","TimeInput","isPace","key","nativeEvent","data","t","handleBackspaceEntry","handleNumericEntry","getClass","mobileClass","useCalculatedTextStyles","calculatedText","fontSize","display","flexDirection","justifyContent","marginTop","CalculatedResults","decorator","useStyles","inputWrapper","InputWrapper","children","tabContentWrapper","TabContentWrapper","Pace","useState","setTime","distance","setDistance","paceInSeconds","console","log","getPace","Time","pace","setPace","timeInSeconds","getTime","Distance","units","paceSeconds","timeSeconds","toFixed","getDistance","wrapper","position","left","top","transform","logoWrapper","logo","width","tabsWrapper","opacity","toggleWrapper","App","setMetric","tab","setTab","CurrentTab","src","Logo","alt","Paper","Tabs","Tab","selected","onClick","FormControl","component","FormGroup","aria-label","row","FormControlLabel","control","Switch","labelPlacement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAAaA,EAAb,yGAIE,SAA4BC,GAC1B,GAAID,EAAgBE,eAAeC,KAAKF,GAAO,CAC7C,IAAIG,EACFH,EAAKI,MAAML,EAAgBE,gBAAgB,GAC3CD,EAAKI,MAAML,EAAgBE,gBAAgB,GAC3CD,EAAKI,MAAML,EAAgBE,gBAAgB,GAI7C,GAA4B,KAF5BE,EAAeA,EAAaE,UAAU,EAAGF,EAAaG,OAAS,IAE9CA,OAIf,OADEH,EAAaE,UAAU,EAAG,GAAK,IAAMF,EAAaE,UAAU,GAG9D,IAAME,EAAUJ,EAAaE,UAAUF,EAAaG,OAAS,GACvDE,EAAUL,EAAaE,UAC3BF,EAAaG,OAAS,EACtBH,EAAaG,OAAS,GAKxB,OAHcH,EAAaE,UAAU,EAAGF,EAAaG,OAAS,GAEhC,IAAME,EAAU,IAAMD,EAGjD,GAAIR,EAAgBU,iBAAiBP,KAAKF,GAAO,CACtD,IAAIG,EACFH,EAAKI,MAAML,EAAgBU,kBAAkB,GAC7CT,EAAKI,MAAML,EAAgBU,kBAAkB,GAK/C,OAJAN,EAAe,IAAMA,EAAaE,UAAU,EAAG,IAGhCA,UAAU,EAAG,GAAK,IAAMF,EAAaE,UAAU,MApCpE,gCAyCE,SAA0BL,EAAMU,GAC9B,GAAIX,EAAgBE,eAAeC,KAAKF,GAAO,CAC7C,IAAIG,EACFH,EAAKI,MAAML,EAAgBE,gBAAgB,GAC3CD,EAAKI,MAAML,EAAgBE,gBAAgB,GAC3CD,EAAKI,MAAML,EAAgBE,gBAAgB,GAIvCM,GAFNJ,GAAgBO,GAEaL,UAAUF,EAAaG,OAAS,GACvDE,EAAUL,EAAaE,UAC3BF,EAAaG,OAAS,EACtBH,EAAaG,OAAS,GAKxB,OAHcH,EAAaE,UAAU,EAAGF,EAAaG,OAAS,GAEhC,IAAME,EAAU,IAAMD,EAE/C,GAAIR,EAAgBU,iBAAiBP,KAAKF,GAAO,CACtD,IAAIG,EACFH,EAAKI,MAAML,EAAgBU,kBAAkB,GAC7CT,EAAKI,MAAML,EAAgBU,kBAAkB,GAE/C,MAAwB,OADxBN,GAAgBO,GACC,IACfP,EAAeA,EAAaE,UAAU,IAEvBA,UAAU,EAAG,GAAK,IAAMF,EAAaE,UAAU,GAK5DF,EAAa,GACb,IACAA,EAAaE,UAAU,EAAG,GAC1B,IACAF,EAAaE,UAAU,QA5EjC,KAAaN,EACJU,iBAAmB,wBADfV,EAEJE,eAAiB,oCCAnB,IAAMU,EAAW,CACtBC,iBAAkB,SAACZ,GACjB,GAAID,EAAgBE,eAAeC,KAAKF,GAAO,CAC7C,IAAIa,EAAQb,EAAKI,MAAML,EAAgBE,gBAAgB,GACnDO,EAAUR,EAAKI,MAAML,EAAgBE,gBAAgB,GACrDM,EAAUP,EAAKI,MAAML,EAAgBE,gBAAgB,GAIzD,OADkB,KAAhBa,OAAOD,GAAkC,GAAlBC,OAAON,GAAgBM,OAAOP,GAElD,GAAIR,EAAgBU,iBAAiBP,KAAKF,GAAO,CACtD,IAAIQ,EAAUR,EAAKI,MAAML,EAAgBU,kBAAkB,GACvDF,EAAUP,EAAKI,MAAML,EAAgBU,kBAAkB,GAG3D,OADqC,GAAlBK,OAAON,GAAgBM,OAAOP,KAIrDQ,oBAAqB,SAACR,GACpB,OAAIA,GAAW,KACNI,EAASK,qBAAqBT,GAE9BI,EAASM,uBAAuBV,IAG3CU,uBAAwB,SAACC,GACvB,IAAMV,EAAUU,EAAI,GACdX,EAAWC,EAAU,EAAK,GAKhC,OAHsBW,KAAKC,MAAMZ,GAGV,KADrBD,EAAU,GAAK,IAAMY,KAAKE,MAAMd,GAAWY,KAAKE,MAAMd,KAG1DS,qBAAsB,SAACE,GACrB,IAAML,EAAQK,EAAI,KACZV,EAAWK,EAAQ,EAAK,GACxBN,EAAWC,EAAU,EAAK,GAOhC,OALoBW,KAAKC,MAAMP,GAKV,KAHnBL,EAAU,GAAK,IAAMW,KAAKC,MAAMZ,GAAWW,KAAKC,MAAMZ,IAGb,KADzCD,EAAU,GAAK,IAAMY,KAAKE,MAAMd,GAAWY,KAAKE,MAAMd,M,SC7C/Ce,EAAe,UCqBbC,EAlBYC,YAAW,CACpCC,UAAW,CACTC,gBDH2B,UCI3BC,aAAc,EACdC,OAAQ,WAER,UAAW,CACTC,MAAO,SAET,+BAAgC,CAC9BA,MAAOP,GAET,wEAAyE,CACvEQ,YAAaR,M,OCoBJS,EA/BO,SAACC,GACrB,IAAMC,EAAWC,YAAc,qBACvBC,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,SAAUC,EAAsBL,EAAtBK,OAAQC,EAAcN,EAAdM,UAC3BC,EAAUhB,IAYhB,OACE,mCACE,cAACiB,EAAA,EAAD,CACEF,UAAWA,IAAa,EACxBG,UAAWF,EAAQd,UACnBiB,QAAQ,WACRC,YAAa,WACbC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOX,QACnCA,MAAOA,EACPY,MAAOV,EAAS,aAAe,QAC/BW,MAAO,CAAEC,aAAchB,EAAW,OAAS,WCOpCiB,EAhCG,SAAClB,GACjB,IAAMC,EAAWC,YAAc,qBACvBC,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,SAAUE,EAAsBN,EAAtBM,UAAWa,EAAWnB,EAAXmB,OAC9BZ,EAAUhB,IAahB,OACE,mCACE,cAACiB,EAAA,EAAD,CACEF,UAAWA,IAAa,EACxBG,UAAWF,EAAQd,UACnBiB,QAAQ,WACRC,YAAaQ,EAAS,OAAS,OAC/BP,SAlBgB,SAACC,GACrB,IAAMO,EAAMP,EAAEQ,YAAYC,KACd,OAARF,GACFhB,GAAS,SAACmB,GAAD,OAAOxD,EAAgByD,qBAAqBD,MAGnD,QAAQrD,KAAKkD,IACfhB,GAAS,SAACmB,GAAD,OAAOxD,EAAgB0D,mBAAmBF,EAAGH,OAYpDjB,MAAOA,EACPY,MAAOI,EAAS,OAAS,OACzBH,MAAO,CAAEC,aAAchB,EAAW,OAAS,WC1BpCyB,EALE,SAACjB,EAAWR,GAC3B,IAAM0B,EAAc1B,EAAWQ,EAAY,WAAa,KACxD,MAAM,GAAN,OAAUA,EAAV,YAAuBkB,ICiBVC,EAjBiBpC,YAAW,CACzCqC,eAAgB,CACdC,SAAU,GACVjC,MAAO,QACPkC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,UAAW,GACX,2BAA4B,CAC1BJ,SAAU,IAEZ,YAAa,CACXI,UAAW,MCQFC,EAjBW,SAACnC,GAAW,IAC5Be,EAA4Bf,EAA5Be,MAAOZ,EAAqBH,EAArBG,MAAOiC,EAAcpC,EAAdoC,UAChB7B,EAAUqB,IACV3B,EAAWC,YAAc,qBAE/B,OACE,mCACE,sBAAKO,UAAWiB,EAASnB,EAAQsB,eAAgB5B,GAAjD,UACE,sBAAMQ,UAAU,wBAAhB,SAAyCM,IACzC,iCACGZ,EADH,IACWiC,WCXbC,EAAY7C,YAAW,CAC3B8C,aAAc,CACZ,YAAa,CACXP,QAAS,OACTC,cAAe,SACfE,UAAW,OAgBFK,EAXM,SAACvC,GACpB,IAAMO,EAAU8B,IACVpC,EAAWC,YAAc,qBAE/B,OACE,qBAAKO,UAAWiB,EAASnB,EAAQ+B,aAAcrC,GAA/C,SACGD,EAAMwC,YChBPH,EAAY7C,YAAW,CAC3BiD,kBAAmB,CACjBV,QAAS,OACTC,cAAe,SAEf,YAAa,CACXD,QAAS,OACTC,cAAe,qBAgBNU,EAXW,SAAC1C,GACzB,IAAMO,EAAU8B,IACVpC,EAAWC,YAAc,qBAE/B,OACE,qBAAKO,UAAWiB,EAASnB,EAAQkC,kBAAmBxC,GAApD,SACGD,EAAMwC,YC2BEG,EAzCF,SAAC,GAAgB,IAAdtC,EAAa,EAAbA,OAAa,EACHuC,mBAAS,SADN,mBACpB5E,EADoB,KACd6E,EADc,OAEKD,mBAAS,IAFd,mBAEpBE,EAFoB,KAEVC,EAFU,KAqB3B,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CACE5C,MAAO2C,EACP1C,SAAU2C,EACV1C,OAAQA,EACRC,WAAW,IAEb,cAAC,EAAD,CAAWH,MAAOnC,EAAMoC,SAAUyC,OAEpC,cAAC,EAAD,CACE1C,MA7BU,WACd,IACE,IAAM5B,EAAUI,EAASC,iBAAiBZ,GAE1C,GAAyB,IAArBc,OAAOgE,IAA+B,IAAZvE,EAC5B,MAAO,QAGT,IAAMyE,EAAgBzE,EAAUO,OAAOgE,GAEvC,OAAOnE,EAASI,oBAAoBiE,GACpC,MAAOnC,GAEP,OADAoC,QAAQC,IAAI,QAASrC,GACd,SAgBEsC,GACPpC,MAAM,kBACNqB,UAAW/B,EAAS,MAAQ,YCQrB+C,EA1CF,SAAC,GAAgB,IAAd/C,EAAa,EAAbA,OAAa,EACHuC,mBAAS,SADN,mBACpBS,EADoB,KACdC,EADc,OAEKV,mBAAS,IAFd,mBAEpBE,EAFoB,KAEVC,EAFU,KAqB3B,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CACE5C,MAAO2C,EACP1C,SAAU2C,EACV1C,OAAQA,EACRC,WAAW,IAEb,cAAC,EAAD,CACEH,MAAOkD,EACPjD,SAAUkD,EACVjD,OAAQA,EACRc,QAAQ,OAGZ,cAAC,EAAD,CAAmBhB,MAjCP,WACd,IACE,IAAM5B,EAAUI,EAASC,iBAAiByE,GAE1C,GAAyB,IAArBvE,OAAOgE,IAA+B,IAAZvE,EAC5B,MAAO,QAGT,IAAMgF,EAAgBhF,EAAUO,OAAOgE,GAEvC,OAAOnE,EAASI,oBAAoBwE,GACpC,MAAO1C,GAEP,OADAoC,QAAQC,IAAI,QAASrC,GACd,SAoBmB2C,GAAWzC,MAAM,wBCGlC0C,EA1CE,SAAC,GAAgB,IAAdpD,EAAa,EAAbA,OAAa,EACPuC,mBAAS,SADF,mBACxBS,EADwB,KAClBC,EADkB,OAEPV,mBAAS,SAFF,mBAExB5E,EAFwB,KAElB6E,EAFkB,KAqB/B,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CACE1C,MAAOnC,EACPoC,SAAUyC,EACVxC,OAAQA,EACRC,WAAW,IAEb,cAAC,EAAD,CACEH,MAAOkD,EACPjD,SAAUkD,EACVjD,OAAQA,EACRc,QAAQ,OAGZ,cAAC,EAAD,CAAmBhB,MAjCH,WAClB,IAAMuD,EAAQrD,EAAS,aAAe,QACtC,IACE,IAAMsD,EAAchF,EAASC,iBAAiByE,GACxCO,EAAcjF,EAASC,iBAAiBZ,GAE9C,OAA4B,IAAxBc,OAAO8E,IAAsC,IAAhBD,EACzB,KAAN,OAAYD,GAGR,GAAN,OAAU5E,OAAO8E,EAAcD,GAAaE,QAAQ,GAApD,YAA0DH,GAC1D,MAAO7C,GAEP,OADAoC,QAAQC,IAAI,QAASrC,GACf,KAAN,OAAY6C,IAoBcI,GAAe/C,MAAM,4BC5CtC,MAA0B,qCCenCsB,EAAY7C,YAAW,CAC3BuE,QAAS,CACPhC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChB+B,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,yBAEbC,YAAa,CACXrC,QAAS,OACTE,eAAgB,SAChBhB,aAAc,IAEhBoD,KAAM,CACJC,MAAO,IAEP,YAAa,CACXA,MAAO,MAGXC,YAAa,CACXtD,aAAc,GACdvB,gBAAiB,UACjBG,MAAO,QACP,kBAAmB,CACjBF,aAAc,GAEhB,oCAAqC,CACnCD,gBAAiB,QAEnB,uBAAwB,CACtBA,gBAAiBJ,GAEnB,6BAA8B,CAC5BkF,QAAS,IAEX,0CAA2C,CACzCA,QAAS,GAEX,YAAa,CACX5E,OAAQ,OACRqB,aAAc,KAIlBwD,cAAe,CACb,0BAA2B,CAAE5E,Mb9DH,Wa+D1B,wCAAyC,CACvCA,MAAOP,GAET,+CAAgD,CAC9CI,gBAAiB,QAEnB,2DAA4D,CAC1DA,gBAAiBJ,MAmDRoF,MA9Cf,WACE,IAAMnE,EAAU8B,IACVpC,EAAWC,YAAc,qBAFlB,EAIe0C,oBAAS,GAJxB,mBAINvC,EAJM,KAIEsE,EAJF,OAKS/B,mBAAS,GALlB,mBAKNgC,EALM,KAKDC,EALC,KASPC,EAFgB,CAACnC,EAAMS,EAAMK,GAEFmB,GAEjC,OACE,qBAAKnE,UAAU,MAAf,SACE,sBAAKA,UAAWiB,EAASnB,EAAQwD,QAAS9D,GAA1C,UACE,qBAAKQ,UAAWF,EAAQ6D,YAAxB,SACE,qBACE3D,UAAWiB,EAASnB,EAAQ8D,KAAMpE,GAClC8E,IAAKC,EACLC,IAAI,oBAGR,eAACC,EAAA,EAAD,CAAOzE,UAAWiB,EAASnB,EAAQgE,YAAatE,GAAhD,UACE,eAACkF,EAAA,EAAD,CAAMhF,MAAOyE,EAAb,UACE,cAACQ,EAAA,EAAD,CAAKrE,MAAM,OAAOsE,UAAQ,EAACC,QAAS,kBAAMT,EAAO,MACjD,cAACO,EAAA,EAAD,CAAKrE,MAAM,OAAOuE,QAAS,kBAAMT,EAAO,MACxC,cAACO,EAAA,EAAD,CAAKrE,MAAM,WAAWuE,QAAS,kBAAMT,EAAO,SAG9C,cAACU,EAAA,EAAD,CAAaC,UAAU,WAAW/E,UAAWF,EAAQkE,cAArD,SACE,cAACgB,EAAA,EAAD,CAAWC,aAAW,WAAWC,KAAG,EAApC,SACE,cAACC,EAAA,EAAD,CACEzF,MAAOE,EACPwF,QAAS,cAACC,EAAA,EAAD,CAAQjG,MAAM,YACvBkB,MAAOV,EAAS,SAAW,WAC3B0F,eAAe,MACfT,QAAS,kBAAMX,GAAWtE,aAKlC,cAACyE,EAAD,CAAYzE,OAAQA,UCxGb2F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.03f37bfc.chunk.js","sourcesContent":["export class TimeFormHelpers {\r\n  static minutesRegexTime = /([0-9]{2}):([0-9]{2})/;\r\n  static hoursRegexTime = /([0-9]{1,}):([0-9]{2}):([0-9]{2})/;\r\n\r\n  static handleBackspaceEntry(time) {\r\n    if (TimeFormHelpers.hoursRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.hoursRegexTime)[1] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[2] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[3];\r\n\r\n      mashedString = mashedString.substring(0, mashedString.length - 1);\r\n\r\n      if (mashedString.length === 4) {\r\n        // going from hours -> minutes\r\n        const newTimeString =\r\n          mashedString.substring(0, 2) + \":\" + mashedString.substring(2);\r\n        return newTimeString;\r\n      } else {\r\n        const seconds = mashedString.substring(mashedString.length - 2);\r\n        const minutes = mashedString.substring(\r\n          mashedString.length - 4,\r\n          mashedString.length - 2\r\n        );\r\n        const hours = mashedString.substring(0, mashedString.length - 4);\r\n\r\n        const newTimeString = hours + \":\" + minutes + \":\" + seconds;\r\n        return newTimeString;\r\n      }\r\n    } else if (TimeFormHelpers.minutesRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.minutesRegexTime)[1] +\r\n        time.match(TimeFormHelpers.minutesRegexTime)[2];\r\n      mashedString = \"0\" + mashedString.substring(0, 3);\r\n\r\n      const newTimeString =\r\n        mashedString.substring(0, 2) + \":\" + mashedString.substring(2);\r\n      return newTimeString;\r\n    }\r\n  }\r\n\r\n  static handleNumericEntry(time, enteredCharacter) {\r\n    if (TimeFormHelpers.hoursRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.hoursRegexTime)[1] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[2] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[3];\r\n\r\n      mashedString += enteredCharacter;\r\n\r\n      const seconds = mashedString.substring(mashedString.length - 2);\r\n      const minutes = mashedString.substring(\r\n        mashedString.length - 4,\r\n        mashedString.length - 2\r\n      );\r\n      const hours = mashedString.substring(0, mashedString.length - 4);\r\n\r\n      const newTimeString = hours + \":\" + minutes + \":\" + seconds;\r\n      return newTimeString;\r\n    } else if (TimeFormHelpers.minutesRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.minutesRegexTime)[1] +\r\n        time.match(TimeFormHelpers.minutesRegexTime)[2];\r\n      mashedString += enteredCharacter;\r\n      if (mashedString[0] === \"0\") {\r\n        mashedString = mashedString.substring(1);\r\n        const newTimeString =\r\n          mashedString.substring(0, 2) + \":\" + mashedString.substring(2);\r\n        return newTimeString;\r\n      } else {\r\n        // going from minutes -> hours\r\n        const newTimeString =\r\n          mashedString[0] +\r\n          \":\" +\r\n          mashedString.substring(1, 3) +\r\n          \":\" +\r\n          mashedString.substring(3);\r\n        return newTimeString;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { TimeFormHelpers } from \"./TimeFormHelpers\";\r\n\r\nexport const TimeUtil = {\r\n  getTimeInSeconds: (time) => {\r\n    if (TimeFormHelpers.hoursRegexTime.test(time)) {\r\n      let hours = time.match(TimeFormHelpers.hoursRegexTime)[1];\r\n      let minutes = time.match(TimeFormHelpers.hoursRegexTime)[2];\r\n      let seconds = time.match(TimeFormHelpers.hoursRegexTime)[2];\r\n\r\n      let totalSeconds =\r\n        Number(hours) * 3600 + Number(minutes) * 60 + Number(seconds);\r\n      return totalSeconds;\r\n    } else if (TimeFormHelpers.minutesRegexTime.test(time)) {\r\n      let minutes = time.match(TimeFormHelpers.minutesRegexTime)[1];\r\n      let seconds = time.match(TimeFormHelpers.minutesRegexTime)[2];\r\n\r\n      let totalSeconds = Number(minutes) * 60 + Number(seconds);\r\n      return totalSeconds;\r\n    }\r\n  },\r\n  secondsToTimeString: (seconds) => {\r\n    if (seconds >= 3600) {\r\n      return TimeUtil.secondsToHoursString(seconds);\r\n    } else {\r\n      return TimeUtil.secondsToMinutesString(seconds);\r\n    }\r\n  },\r\n  secondsToMinutesString: (s) => {\r\n    const minutes = s / 60;\r\n    const seconds = (minutes % 1) * 60;\r\n\r\n    const minutesString = Math.trunc(minutes);\r\n    const secondsString =\r\n      seconds < 10 ? \"0\" + Math.round(seconds) : Math.round(seconds);\r\n    return minutesString + \":\" + secondsString;\r\n  },\r\n  secondsToHoursString: (s) => {\r\n    const hours = s / 3600;\r\n    const minutes = (hours % 1) * 60;\r\n    const seconds = (minutes % 1) * 60;\r\n\r\n    const hoursString = Math.trunc(hours);\r\n    const minutesString =\r\n      minutes < 10 ? \"0\" + Math.trunc(minutes) : Math.trunc(minutes);\r\n    const secondsString =\r\n      seconds < 10 ? \"0\" + Math.round(seconds) : Math.round(seconds);\r\n    return hoursString + \":\" + minutesString + \":\" + secondsString;\r\n  },\r\n};\r\n","export const primaryColor = \"#965ada\";\r\nexport const secondaryColor = \"#bb94e7\";\r\nexport const inputBackground = \"#0c0c0c\";\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { inputBackground, primaryColor } from \"../themeConstants\";\r\n\r\nconst useTextInputStyles = makeStyles({\r\n  textInput: {\r\n    backgroundColor: inputBackground,\r\n    borderRadius: 4,\r\n    margin: \"auto 4px\",\r\n\r\n    \"& input\": {\r\n      color: \"white\",\r\n    },\r\n    \"& label, & label.Mui-focused\": {\r\n      color: primaryColor,\r\n    },\r\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: primaryColor,\r\n    },\r\n  },\r\n});\r\n\r\nexport default useTextInputStyles;\r\n","import { TextField, useMediaQuery } from \"@material-ui/core\";\nimport React from \"react\";\nimport processDistanceInput from \"../../common/processDistanceInput\";\nimport useTextInputStyles from \"../../common/styles/useTextInputStyles\";\n\nconst DistanceInput = (props) => {\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n  const { value, setValue, metric, autoFocus } = props;\n  const classes = useTextInputStyles();\n\n  const onMilesChanged = (e) => {\n    const numberKeyPressed = processDistanceInput(e.key);\n\n    if (numberKeyPressed === \"Backspace\") {\n      setValue((val) => val.substring(0, val.length - 1));\n    } else if (numberKeyPressed) {\n      setValue((val) => (val += numberKeyPressed));\n    }\n  };\n\n  return (\n    <>\n      <TextField\n        autoFocus={autoFocus || false}\n        className={classes.textInput}\n        variant=\"outlined\"\n        placeholder={\"distance\"}\n        onChange={(e) => setValue(e.target.value)}\n        value={value}\n        label={metric ? \"kilometers\" : \"miles\"}\n        style={{ marginBottom: isMobile ? \"16px\" : null }}\n      />\n    </>\n  );\n};\n\nexport default DistanceInput;\n","import { TextField, useMediaQuery } from \"@material-ui/core\";\nimport React from \"react\";\nimport useTextInputStyles from \"../../common/styles/useTextInputStyles\";\nimport { TimeFormHelpers } from \"../../utils/TimeFormHelpers\";\n\nconst TimeInput = (props) => {\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n  const { value, setValue, autoFocus, isPace } = props;\n  const classes = useTextInputStyles();\n\n  const formatSetTime = (e) => {\n    const key = e.nativeEvent.data;\n    if (key === null) {\n      setValue((t) => TimeFormHelpers.handleBackspaceEntry(t));\n    }\n\n    if (/[0-9]/.test(key)) {\n      setValue((t) => TimeFormHelpers.handleNumericEntry(t, key));\n    }\n  };\n\n  return (\n    <>\n      <TextField\n        autoFocus={autoFocus || false}\n        className={classes.textInput}\n        variant=\"outlined\"\n        placeholder={isPace ? \"pace\" : \"time\"}\n        onChange={formatSetTime}\n        value={value}\n        label={isPace ? \"pace\" : \"time\"}\n        style={{ marginBottom: isMobile ? \"16px\" : null }}\n      />\n    </>\n  );\n};\n\nexport default TimeInput;\n","const getClass = (className, isMobile) => {\r\n  const mobileClass = isMobile ? className + \"--mobile\" : null;\r\n  return `${className} ${mobileClass}`;\r\n};\r\n\r\nexport default getClass;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useCalculatedTextStyles = makeStyles({\r\n  calculatedText: {\r\n    fontSize: 30,\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginTop: 16,\r\n    \"& .calculatedText--label\": {\r\n      fontSize: 16,\r\n    },\r\n    \"&--mobile\": {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n});\r\n\r\nexport default useCalculatedTextStyles;\r\n","import { useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport getClass from \"../common/styles/getClass\";\r\nimport useCalculatedTextStyles from \"../common/styles/useCalculatedTextStyles\";\r\n\r\nconst CalculatedResults = (props) => {\r\n  const { label, value, decorator } = props;\r\n  const classes = useCalculatedTextStyles();\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <>\r\n      <div className={getClass(classes.calculatedText, isMobile)}>\r\n        <span className=\"calculatedText--label\">{label}</span>\r\n        <span>\r\n          {value} {decorator}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalculatedResults;\r\n","import { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport getClass from \"../../common/styles/getClass\";\r\n\r\nconst useStyles = makeStyles({\r\n  inputWrapper: {\r\n    \"&--mobile\": {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      marginTop: 16,\r\n    },\r\n  },\r\n});\r\n\r\nconst InputWrapper = (props) => {\r\n  const classes = useStyles();\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <div className={getClass(classes.inputWrapper, isMobile)}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputWrapper;\r\n","import { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport getClass from \"../../common/styles/getClass\";\r\n\r\nconst useStyles = makeStyles({\r\n  tabContentWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    \"&--mobile\": {\r\n      display: \"flex\",\r\n      flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TabContentWrapper = (props) => {\r\n  const classes = useStyles();\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <div className={getClass(classes.tabContentWrapper, isMobile)}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabContentWrapper;\r\n","import React, { useState } from \"react\";\nimport { TimeUtil } from \"../utils/TimeUtil\";\nimport DistanceInput from \"./Input/DistanceInput\";\nimport TimeInput from \"./Input/TimeInput\";\nimport CalculatedResults from \"./CalculatedResults\";\nimport InputWrapper from \"./Input/InputWrapper\";\nimport TabContentWrapper from \"./Input/TabContentWrapper\";\n\nconst Pace = ({ metric }) => {\n  const [time, setTime] = useState(\"00:00\");\n  const [distance, setDistance] = useState(\"\");\n\n  const getPace = () => {\n    try {\n      const seconds = TimeUtil.getTimeInSeconds(time);\n\n      if (Number(distance) === 0 || seconds === 0) {\n        return \"00:00\";\n      }\n\n      const paceInSeconds = seconds / Number(distance);\n\n      return TimeUtil.secondsToTimeString(paceInSeconds);\n    } catch (e) {\n      console.log(\"error\", e);\n      return \"00:00\";\n    }\n  };\n\n  return (\n    <TabContentWrapper>\n      <InputWrapper>\n        <DistanceInput\n          value={distance}\n          setValue={setDistance}\n          metric={metric}\n          autoFocus={true}\n        />\n        <TimeInput value={time} setValue={setTime} />\n      </InputWrapper>\n      <CalculatedResults\n        value={getPace()}\n        label=\"Calculated Pace\"\n        decorator={metric ? \"/km\" : \"/mi\"}\n      />\n    </TabContentWrapper>\n  );\n};\n\nexport default Pace;\n","import React, { useState } from \"react\";\r\nimport useCalculatedTextStyles from \"../common/styles/useCalculatedTextStyles\";\r\nimport { TimeUtil } from \"../utils/TimeUtil\";\r\nimport CalculatedResults from \"./CalculatedResults\";\r\nimport DistanceInput from \"./Input/DistanceInput\";\r\nimport InputWrapper from \"./Input/InputWrapper\";\r\nimport TabContentWrapper from \"./Input/TabContentWrapper\";\r\nimport TimeInput from \"./Input/TimeInput\";\r\n\r\nconst Time = ({ metric }) => {\r\n  const [pace, setPace] = useState(\"00:00\");\r\n  const [distance, setDistance] = useState(\"\");\r\n\r\n  const getTime = () => {\r\n    try {\r\n      const seconds = TimeUtil.getTimeInSeconds(pace);\r\n\r\n      if (Number(distance) === 0 || seconds === 0) {\r\n        return \"00:00\";\r\n      }\r\n\r\n      const timeInSeconds = seconds * Number(distance);\r\n\r\n      return TimeUtil.secondsToTimeString(timeInSeconds);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n      return \"00:00\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TabContentWrapper>\r\n      <InputWrapper>\r\n        <DistanceInput\r\n          value={distance}\r\n          setValue={setDistance}\r\n          metric={metric}\r\n          autoFocus={true}\r\n        />\r\n        <TimeInput\r\n          value={pace}\r\n          setValue={setPace}\r\n          metric={metric}\r\n          isPace={true}\r\n        />\r\n      </InputWrapper>\r\n      <CalculatedResults value={getTime()} label=\"Calculated Time\" />\r\n    </TabContentWrapper>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import React, { useState } from \"react\";\r\nimport { TimeUtil } from \"../utils/TimeUtil\";\r\nimport CalculatedResults from \"./CalculatedResults\";\r\nimport InputWrapper from \"./Input/InputWrapper\";\r\nimport TabContentWrapper from \"./Input/TabContentWrapper\";\r\nimport TimeInput from \"./Input/TimeInput\";\r\n\r\nconst Distance = ({ metric }) => {\r\n  const [pace, setPace] = useState(\"00:00\");\r\n  const [time, setTime] = useState(\"00:00\");\r\n\r\n  const getDistance = () => {\r\n    const units = metric ? \"kilometers\" : \"miles\";\r\n    try {\r\n      const paceSeconds = TimeUtil.getTimeInSeconds(pace);\r\n      const timeSeconds = TimeUtil.getTimeInSeconds(time);\r\n\r\n      if (Number(timeSeconds) === 0 || paceSeconds === 0) {\r\n        return `0 ${units}`;\r\n      }\r\n\r\n      return `${Number(timeSeconds / paceSeconds).toFixed(2)} ${units}`;\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n      return `0 ${units}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TabContentWrapper>\r\n      <InputWrapper>\r\n        <TimeInput\r\n          value={time}\r\n          setValue={setTime}\r\n          metric={metric}\r\n          autoFocus={true}\r\n        />\r\n        <TimeInput\r\n          value={pace}\r\n          setValue={setPace}\r\n          metric={metric}\r\n          isPace={true}\r\n        />\r\n      </InputWrapper>\r\n      <CalculatedResults value={getDistance()} label=\"Calculated Distance\" />\r\n    </TabContentWrapper>\r\n  );\r\n};\r\n\r\nexport default Distance;\r\n","export default __webpack_public_path__ + \"static/media/racepace.0d37b089.png\";","import \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Tab, Tabs, useMediaQuery } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useState } from \"react\";\nimport Pace from \"./components/Pace\";\nimport Time from \"./components/Time\";\nimport Distance from \"./components/Distance\";\nimport Logo from \"./assets/racepace.png\";\nimport { primaryColor, secondaryColor } from \"./common/themeConstants\";\nimport getClass from \"./common/styles/getClass\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  logoWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: 16,\n  },\n  logo: {\n    width: 450,\n\n    \"&--mobile\": {\n      width: 250,\n    },\n  },\n  tabsWrapper: {\n    marginBottom: 16,\n    backgroundColor: \"#161616\",\n    color: \"white\",\n    \"& .MuiTabs-root\": {\n      borderRadius: 4,\n    },\n    \"& .MuiButtonBase-root.MuiTab-root\": {\n      backgroundColor: \"#111\",\n    },\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: primaryColor,\n    },\n    \"& .MuiTab-textColorInherit\": {\n      opacity: 0.5,\n    },\n    \"& .MuiTab-textColorInherit.Mui-selected\": {\n      opacity: 1,\n    },\n    \"&--mobile\": {\n      margin: \"auto\",\n      marginBottom: 16,\n    },\n  },\n\n  toggleWrapper: {\n    \"& .MuiSwitch-switchBase\": { color: secondaryColor },\n    \"& .MuiSwitch-colorPrimary.Mui-checked\": {\n      color: primaryColor,\n    },\n    \"& .MuiSwitch-colorPrimary + .MuiSwitch-track\": {\n      backgroundColor: \"#444\",\n    },\n    \"& .MuiSwitch-colorPrimary.Mui-checked + .MuiSwitch-track\": {\n      backgroundColor: primaryColor,\n    },\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  const [metric, setMetric] = useState(false);\n  const [tab, setTab] = useState(0);\n\n  const tabComponents = [Pace, Time, Distance];\n\n  const CurrentTab = tabComponents[tab];\n\n  return (\n    <div className=\"App\">\n      <div className={getClass(classes.wrapper, isMobile)}>\n        <div className={classes.logoWrapper}>\n          <img\n            className={getClass(classes.logo, isMobile)}\n            src={Logo}\n            alt=\"Racepace Logo\"\n          />\n        </div>\n        <Paper className={getClass(classes.tabsWrapper, isMobile)}>\n          <Tabs value={tab}>\n            <Tab label=\"Pace\" selected onClick={() => setTab(0)}></Tab>\n            <Tab label=\"Time\" onClick={() => setTab(1)}></Tab>\n            <Tab label=\"Distance\" onClick={() => setTab(2)}></Tab>\n          </Tabs>\n\n          <FormControl component=\"fieldset\" className={classes.toggleWrapper}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                value={metric}\n                control={<Switch color=\"primary\" />}\n                label={metric ? \"Metric\" : \"Imperial\"}\n                labelPlacement=\"end\"\n                onClick={() => setMetric(!metric)}\n              />\n            </FormGroup>\n          </FormControl>\n        </Paper>\n        <CurrentTab metric={metric} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}