{"version":3,"sources":["common/themeConstants.js","utils/TimeFormHelpers.js","utils/TimeUtil.js","components/Pace.js","components/Time.js","components/Distance.js","assets/racepace.png","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","inputBackground","TimeFormHelpers","time","hoursRegexTime","test","mashedString","match","substring","length","seconds","minutes","minutesRegexTime","enteredCharacter","TimeUtil","getTimeInSeconds","hours","Number","secondsToTimeString","secondsToHoursString","secondsToMinutesString","s","Math","trunc","round","console","log","useStyles","makeStyles","paceText","fontSize","color","textField","backgroundColor","borderRadius","margin","borderColor","Pace","metric","classes","useState","setTime","distance","setDistance","TextField","autoFocus","className","variant","placeholder","onChange","e","target","value","label","onKeyDown","key","handleBackspaceEntry","handleNumericEntry","paceInSeconds","getPace","Time","pace","setPace","timeInSeconds","getTime","Distance","formatSetTime","val","settingFunc","units","paceSeconds","timeSeconds","toFixed","getDistance","wrapper","display","flexDirection","justifyContent","position","left","top","transform","tabsWrapper","marginBottom","opacity","logoWrapper","logo","width","toggleWrapper","App","setMetric","tab","setTab","CurrentTab","src","Logo","alt","Paper","Tabs","Tab","selected","onClick","FormControl","component","FormGroup","aria-label","row","FormControlLabel","control","Switch","labelPlacement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f0fc9ab.chunk.js","sourcesContent":["export const primaryColor = \"#965ada\";\r\nexport const secondaryColor = \"#bb94e7\";\r\nexport const inputBackground = \"#0c0c0c\";\r\n","export class TimeFormHelpers {\r\n  static minutesRegexTime = /([0-9]{2}):([0-9]{2})/;\r\n  static hoursRegexTime = /([0-9]{1,}):([0-9]{2}):([0-9]{2})/;\r\n\r\n  static handleBackspaceEntry(time) {\r\n    if (TimeFormHelpers.hoursRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.hoursRegexTime)[1] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[2] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[3];\r\n\r\n      mashedString = mashedString.substring(0, mashedString.length - 1);\r\n\r\n      if (mashedString.length === 4) {\r\n        // going from hours -> minutes\r\n        const newTimeString =\r\n          mashedString.substring(0, 2) + \":\" + mashedString.substring(2);\r\n        return newTimeString;\r\n      } else {\r\n        const seconds = mashedString.substring(mashedString.length - 2);\r\n        const minutes = mashedString.substring(\r\n          mashedString.length - 4,\r\n          mashedString.length - 2\r\n        );\r\n        const hours = mashedString.substring(0, mashedString.length - 4);\r\n\r\n        const newTimeString = hours + \":\" + minutes + \":\" + seconds;\r\n        return newTimeString;\r\n      }\r\n    } else if (TimeFormHelpers.minutesRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.minutesRegexTime)[1] +\r\n        time.match(TimeFormHelpers.minutesRegexTime)[2];\r\n      mashedString = \"0\" + mashedString.substring(0, 3);\r\n\r\n      const newTimeString =\r\n        mashedString.substring(0, 2) + \":\" + mashedString.substring(2);\r\n      return newTimeString;\r\n    }\r\n  }\r\n\r\n  static handleNumericEntry(time, enteredCharacter) {\r\n    if (TimeFormHelpers.hoursRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.hoursRegexTime)[1] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[2] +\r\n        time.match(TimeFormHelpers.hoursRegexTime)[3];\r\n\r\n      mashedString += enteredCharacter;\r\n\r\n      const seconds = mashedString.substring(mashedString.length - 2);\r\n      const minutes = mashedString.substring(\r\n        mashedString.length - 4,\r\n        mashedString.length - 2\r\n      );\r\n      const hours = mashedString.substring(0, mashedString.length - 4);\r\n\r\n      const newTimeString = hours + \":\" + minutes + \":\" + seconds;\r\n      return newTimeString;\r\n    } else if (TimeFormHelpers.minutesRegexTime.test(time)) {\r\n      let mashedString =\r\n        time.match(TimeFormHelpers.minutesRegexTime)[1] +\r\n        time.match(TimeFormHelpers.minutesRegexTime)[2];\r\n      mashedString += enteredCharacter;\r\n      if (mashedString[0] === \"0\") {\r\n        mashedString = mashedString.substring(1);\r\n        const newTimeString =\r\n          mashedString.substring(0, 2) + \":\" + mashedString.substring(2);\r\n        return newTimeString;\r\n      } else {\r\n        // going from minutes -> hours\r\n        const newTimeString =\r\n          mashedString[0] +\r\n          \":\" +\r\n          mashedString.substring(1, 3) +\r\n          \":\" +\r\n          mashedString.substring(3);\r\n        return newTimeString;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { TimeFormHelpers } from \"./TimeFormHelpers\";\r\n\r\nexport const TimeUtil = {\r\n  getTimeInSeconds: (time) => {\r\n    if (TimeFormHelpers.hoursRegexTime.test(time)) {\r\n      let hours = time.match(TimeFormHelpers.hoursRegexTime)[1];\r\n      let minutes = time.match(TimeFormHelpers.hoursRegexTime)[2];\r\n      let seconds = time.match(TimeFormHelpers.hoursRegexTime)[2];\r\n\r\n      let totalSeconds =\r\n        Number(hours) * 3600 + Number(minutes) * 60 + Number(seconds);\r\n      return totalSeconds;\r\n    } else if (TimeFormHelpers.minutesRegexTime.test(time)) {\r\n      let minutes = time.match(TimeFormHelpers.minutesRegexTime)[1];\r\n      let seconds = time.match(TimeFormHelpers.minutesRegexTime)[2];\r\n\r\n      let totalSeconds = Number(minutes) * 60 + Number(seconds);\r\n      return totalSeconds;\r\n    }\r\n  },\r\n  secondsToTimeString: (seconds) => {\r\n    if (seconds >= 3600) {\r\n      return TimeUtil.secondsToHoursString(seconds);\r\n    } else {\r\n      return TimeUtil.secondsToMinutesString(seconds);\r\n    }\r\n  },\r\n  secondsToMinutesString: (s) => {\r\n    const minutes = s / 60;\r\n    const seconds = (minutes % 1) * 60;\r\n\r\n    const minutesString = Math.trunc(minutes);\r\n    const secondsString =\r\n      seconds < 10 ? \"0\" + Math.round(seconds) : Math.round(seconds);\r\n    return minutesString + \":\" + secondsString;\r\n  },\r\n  secondsToHoursString: (s) => {\r\n    const hours = s / 3600;\r\n    const minutes = (hours % 1) * 60;\r\n    const seconds = (minutes % 1) * 60;\r\n\r\n    console.log(seconds);\r\n\r\n    const hoursString = Math.trunc(hours);\r\n    const minutesString =\r\n      minutes < 10 ? \"0\" + Math.trunc(minutes) : Math.trunc(minutes);\r\n    const secondsString =\r\n      seconds < 10 ? \"0\" + Math.round(seconds) : Math.round(seconds);\r\n    return hoursString + \":\" + minutesString + \":\" + secondsString;\r\n  },\r\n};\r\n","import { makeStyles, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport {\n  inputBackground,\n  primaryColor,\n  secondaryColor,\n} from \"../common/themeConstants\";\nimport { TimeFormHelpers } from \"../utils/TimeFormHelpers\";\nimport { TimeUtil } from \"../utils/TimeUtil\";\n\nconst useStyles = makeStyles({\n  paceText: {\n    fontSize: 30,\n    color: \"white\",\n  },\n  textField: {\n    backgroundColor: inputBackground,\n    borderRadius: 4,\n    margin: \"auto 4px\",\n\n    \"& input\": {\n      color: \"white\",\n    },\n    \"& label, & label.Mui-focused\": {\n      color: primaryColor,\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: primaryColor,\n    },\n  },\n});\n\nconst Pace = ({ metric }) => {\n  const classes = useStyles();\n\n  const [time, setTime] = useState(\"00:00\");\n  const [distance, setDistance] = useState(\"\");\n\n  const getPace = () => {\n    try {\n      const seconds = TimeUtil.getTimeInSeconds(time);\n\n      if (Number(distance) === 0 || seconds === 0) {\n        return \"00:00\";\n      }\n\n      const paceInSeconds = seconds / Number(distance);\n\n      return TimeUtil.secondsToTimeString(paceInSeconds);\n    } catch (e) {\n      console.log(\"error\", e);\n      return \"00:00\";\n    }\n  };\n\n  const formatSetTime = (e) => {\n    if (e.key === \"Backspace\") {\n      setTime(TimeFormHelpers.handleBackspaceEntry(time));\n    }\n\n    if (/[0-9]/.test(e.key)) {\n      setTime(TimeFormHelpers.handleNumericEntry(time, e.key));\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <TextField\n          autoFocus\n          className={`${classes.textField}`}\n          variant=\"outlined\"\n          placeholder={\"distance\"}\n          onChange={(e) => setDistance(e.target.value)}\n          value={distance}\n          label={metric ? \"kilometers\" : \"miles\"}\n        />\n        <TextField\n          className={classes.textField}\n          variant=\"outlined\"\n          placeholder={\"time\"}\n          onKeyDown={formatSetTime}\n          value={time}\n          label=\"time\"\n        />\n      </div>\n      <div className={classes.paceText}>\n        {getPace()}\n        {metric ? \" /km\" : \" /mi\"}\n      </div>\n    </div>\n  );\n};\n\nexport default Pace;\n","import { makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  inputBackground,\r\n  primaryColor,\r\n  secondaryColor,\r\n} from \"../common/themeConstants\";\r\nimport { TimeFormHelpers } from \"../utils/TimeFormHelpers\";\r\nimport { TimeUtil } from \"../utils/TimeUtil\";\r\n\r\nconst useStyles = makeStyles({\r\n  paceText: {\r\n    fontSize: 30,\r\n    color: \"white\",\r\n  },\r\n  textField: {\r\n    backgroundColor: inputBackground,\r\n    borderRadius: 4,\r\n    margin: \"auto 4px\",\r\n\r\n    \"& input\": {\r\n      color: \"white\",\r\n    },\r\n    \"& label, & label.Mui-focused\": {\r\n      color: primaryColor,\r\n    },\r\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: primaryColor,\r\n    },\r\n  },\r\n});\r\n\r\nconst Time = ({ metric }) => {\r\n  const classes = useStyles();\r\n\r\n  const [pace, setPace] = useState(\"00:00\");\r\n  const [distance, setDistance] = useState(\"\");\r\n\r\n  const getTime = () => {\r\n    try {\r\n      const seconds = TimeUtil.getTimeInSeconds(pace);\r\n\r\n      if (Number(distance) === 0 || seconds === 0) {\r\n        return \"00:00\";\r\n      }\r\n\r\n      const timeInSeconds = seconds * Number(distance);\r\n\r\n      return TimeUtil.secondsToTimeString(timeInSeconds);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n      return \"00:00\";\r\n    }\r\n  };\r\n\r\n  const formatSetPace = (e) => {\r\n    if (e.key === \"Backspace\") {\r\n      setPace(TimeFormHelpers.handleBackspaceEntry(pace));\r\n    }\r\n\r\n    if (/[0-9]/.test(e.key)) {\r\n      setPace(TimeFormHelpers.handleNumericEntry(pace, e.key));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TextField\r\n          autoFocus\r\n          className={`${classes.textField}`}\r\n          variant=\"outlined\"\r\n          placeholder={\"distance\"}\r\n          onChange={(e) => setDistance(e.target.value)}\r\n          value={distance}\r\n          label={metric ? \"kilometers\" : \"miles\"}\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          variant=\"outlined\"\r\n          placeholder={\"pace\"}\r\n          onKeyDown={formatSetPace}\r\n          value={pace}\r\n          label=\"pace\"\r\n        />\r\n      </div>\r\n      <div className={classes.paceText}>{getTime()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import { makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  inputBackground,\r\n  primaryColor,\r\n  secondaryColor,\r\n} from \"../common/themeConstants\";\r\nimport { TimeFormHelpers } from \"../utils/TimeFormHelpers\";\r\nimport { TimeUtil } from \"../utils/TimeUtil\";\r\n\r\nconst useStyles = makeStyles({\r\n  paceText: {\r\n    fontSize: 30,\r\n    color: \"white\",\r\n  },\r\n  textField: {\r\n    backgroundColor: inputBackground,\r\n    borderRadius: 4,\r\n    margin: \"auto 4px\",\r\n\r\n    \"& input\": {\r\n      color: \"white\",\r\n    },\r\n    \"& label, & label.Mui-focused\": {\r\n      color: primaryColor,\r\n    },\r\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: primaryColor,\r\n    },\r\n  },\r\n});\r\n\r\nconst Distance = ({ metric }) => {\r\n  const classes = useStyles();\r\n\r\n  const [pace, setPace] = useState(\"00:00\");\r\n  const [time, setTime] = useState(\"00:00\");\r\n\r\n  const getDistance = () => {\r\n    const units = metric ? \"kilometers\" : \"miles\";\r\n    try {\r\n      const paceSeconds = TimeUtil.getTimeInSeconds(pace);\r\n      const timeSeconds = TimeUtil.getTimeInSeconds(time);\r\n\r\n      if (Number(timeSeconds) === 0 || paceSeconds === 0) {\r\n        return `-- ${units}`;\r\n      }\r\n\r\n      return `${Number(timeSeconds / paceSeconds).toFixed(2)} ${units}`;\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n      return `-- ${units}`;\r\n    }\r\n  };\r\n\r\n  const formatSetTime = (e, val, settingFunc) => {\r\n    if (e.key === \"Backspace\") {\r\n      settingFunc(TimeFormHelpers.handleBackspaceEntry(val));\r\n    }\r\n\r\n    if (/[0-9]/.test(e.key)) {\r\n      settingFunc(TimeFormHelpers.handleNumericEntry(val, e.key));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TextField\r\n          autoFocus\r\n          className={`${classes.textField}`}\r\n          onKeyDown={(e) => formatSetTime(e, time, setTime)}\r\n          variant=\"outlined\"\r\n          placeholder={\"time\"}\r\n          value={time}\r\n          label={\"time\"}\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          variant=\"outlined\"\r\n          placeholder={\"pace\"}\r\n          onKeyDown={(e) => formatSetTime(e, pace, setPace)}\r\n          value={pace}\r\n          label=\"pace\"\r\n        />\r\n      </div>\r\n      <div className={classes.paceText}>{getDistance()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Distance;\r\n","export default __webpack_public_path__ + \"static/media/racepace.0d37b089.png\";","import \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Tab, Tabs } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useState } from \"react\";\nimport Pace from \"./components/Pace\";\nimport Time from \"./components/Time\";\nimport Distance from \"./components/Distance\";\nimport Logo from \"./assets/racepace.png\";\nimport { primaryColor, secondaryColor } from \"./common/themeConstants\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  tabsWrapper: {\n    marginBottom: 16,\n    backgroundColor: \"#161616\",\n    color: \"white\",\n    \"& .MuiTabs-root\": {\n      borderRadius: 4,\n    },\n    \"& .MuiButtonBase-root.MuiTab-root\": {\n      backgroundColor: \"#111\",\n    },\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: primaryColor,\n    },\n    \"& .MuiTab-textColorInherit\": {\n      opacity: 1,\n    },\n    \"& .MuiTab-textColorInherit.Mui-selected\": {\n      opacity: 0.9,\n    },\n  },\n  logoWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: 16,\n  },\n  logo: {\n    width: 450,\n  },\n  toggleWrapper: {\n    \"& .MuiSwitch-switchBase\": { color: secondaryColor },\n    \"& .MuiSwitch-colorPrimary.Mui-checked\": {\n      color: primaryColor,\n    },\n    \"& .MuiSwitch-colorPrimary.Mui-checked + .MuiSwitch-track\": {\n      backgroundColor: primaryColor,\n    },\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [metric, setMetric] = useState(false);\n  const [tab, setTab] = useState(0);\n\n  const tabComponents = [Pace, Time, Distance];\n\n  const CurrentTab = tabComponents[tab];\n\n  return (\n    <div className=\"App\">\n      <div className={classes.wrapper}>\n        <div className={classes.logoWrapper}>\n          <img className={classes.logo} src={Logo} alt=\"Racepace Logo\" />\n        </div>\n        <Paper className={classes.tabsWrapper}>\n          <Tabs value={tab}>\n            <Tab\n              className={classes.tab}\n              label=\"Pace\"\n              selected\n              onClick={() => setTab(0)}\n            ></Tab>\n            <Tab label=\"Time\" onClick={() => setTab(1)}></Tab>\n            <Tab label=\"Distance\" onClick={() => setTab(2)}></Tab>\n          </Tabs>\n\n          <FormControl component=\"fieldset\" className={classes.toggleWrapper}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                value={metric}\n                control={<Switch color=\"primary\" />}\n                label={metric ? \"Metric\" : \"Imperial\"}\n                labelPlacement=\"end\"\n                onClick={() => setMetric(!metric)}\n              />\n            </FormGroup>\n          </FormControl>\n        </Paper>\n        <CurrentTab metric={metric} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}